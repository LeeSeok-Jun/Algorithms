"""
문자열 뒤집기
- 다솜이는 0과 1로만 이루어진 문자열 S를 가지로 있습니다.
- 이 문자열 S에 있는 모든 숫자를 전부 같게 만드려고 합니다.
- 다솜이가 할 수 있는 행동은 S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것입니다.
    * 뒤집는 것은 1을 0으로, 0을 1로 바꾸는 것을 의미합니다.
- 문자열 S가 주어졌을 때, 다솜이가 해야 하는 행동의 최소 횟수를 출력하시오.

입력 조건
- 첫째 줄에 0과 1로만 이루어진 문자열 S가 주어집니다. S의 길이는 100만보다 작습니다.

출력 조건
- 첫째 줄에 다솜이가 해야 하는 행동의 최소 횟수를 출력합니다.
"""

# 2020/10/29 PM 03:45 ~ 실패
# 오답!
# 전부 0으로 바뀌는 경우와 전부 1로 바꾸는 경우 중 더 적은 횟수를 가지는 경우를 계산

# 문자열 S 입력
s = input()

"""
prev = 0
min_count = 0

for now in s:
    if now == prev:
        pass
"""

flip_to_zero = 0 # 0으로 뒤집는 횟수
flip_to_one = 0 # 1로 뒤집는 횟수

# 문자열의 첫 번재 데이터에 대해서
if s[0] == '1':
    flip_to_zero = 1
else:
    flip_to_one = 1

# 두 번째 문자열 부터 다음 문자열과 비교하여 뒤집는 횟수 계산
for i in range(len(s) - 1):
    if s[i] != s[i + 1]:
        # 다음 문자열이 1인 경우 0으로 뒤집는 횟수 증가
        if s[i + 1] == '1':
            flip_to_zero += 1
        else:
            flip_to_one += 1

# 뒤집는 횟수가 적은 값을 출력
print(min(flip_to_one, flip_to_zero))