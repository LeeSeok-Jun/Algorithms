"""
볼링공 고르기
- A, B 두 사람이 서로 무게가 다른 볼링공을 고르려고 한다.
- 볼링공은 총 N개가 있으며 각 볼링공마다 무게가 적혀있고 공의 번호는 1번부터 순서대로 부여된다.
- 같은 무게의 공이 여러 개 있을 수 있지만, 서로 다른 공으로 간주한다.
- 볼링공의 무게는 1부터 M까지 자연수의 형태로 존재한다.
- N개의 공의 무게게 각각 주어질 때, 두 사람이 볼링공을 고르는 경우의 수를 구하는 프로그램을 작성하시오.

입력 조건
- 첫째 줄에 볼링공의 개수 N, 공의 최대 무게 M이 공백으로 구분되어 각각 자연수 형태로 주어집니다.(1 <= N <= 1,000, 1 <= M <= 10)
- 둘째 줄에 각 볼링공의 무게 K가 공백으로 구분되어 순서대로 자연수 형태로 주어집니다.(1 <= K <= M)

출력 조건
- 첫째 줄에 두 사람이 볼링공을 고르는 경우의 수를 출력합니다.
"""

# 2020/11/02 03:45 P.M ~ 03:52 P.M
# 정답 해설과 접근 과정이 다름

# 볼링공의 개수와 무게 입력
n, m = map(int, input().split())

# 각 볼링공의 무게 입력
k = list(map(int, input().split()))

### 내가 생각한 풀이 방법 ###

data = [] # 볼링공을 선택한 경우의 수를 저장하는 리스트
# 볼링 공의 무게를 낮은 순 부터 오름차순 정렬
k.sort()

for i in range(n):
    for j in range(i+1, n):
        if k[i] != k[j] and (i, j) not in data:
            data.append((i, j))

print(len(data))

### 정답 해설 방법 ###

# 1부터 10까지의 무게를 담을 수 있는 리스트
array = [0] * 11

for x in k:
    # 각 무게에 해당하는 볼링공의 개수 카운트
    array[x] += 1

result = 0
# 1부터 m까지의 각 무게에 대하여 처리
for i in range(1, m + 1):
    n -= array[i] # 무게가 i인 볼링공의 개수(A가 선택할 수 있는 개수) 제외
    # n에는 현재 A가 선택한 볼링공과 같은 무게인 볼링공의 수를 제외한 남은 다른 무게의 볼링공 갯수가 존재
    result += array[i] * n # A가 선택한 무게의 볼링공 갯수와 B가 선택할 수 있는 경의 수를 곱해서 더함

print(result)