"""
큰 수의 법칙
- 동빈이의 큰 수의 법칙은 다양한 수로 이루어진 배열이 있을 때, 주어진 수들을 M번 더하여 가장 큰 수를 만드는 법칙
- 단, 배열의 특정 인덱스에 해당하는 수가 연속으로 K번을 초과하여 더해질 수 없다.
- 서로 다른 인덱스에 해당하는 수가 같은 경우에도 다른 것으로 간주한다.
- 배열의 크기 N, 숫자가 더해지는 횟수 M 그리고 K가 주어질 때 동빈이의 큰 수의 법칙에 따른 결과를 출력하시오. 

입력 조건
- 첫째 줄에 N(2 <= N <= 1,000), M(1 <= M <= 10,000), K(1 <= K <= 10,000)의 자연수가 주어지며, 각 자연수는 공백으로 구분한다.
- 둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다. 단, 각각의 자연수는 1 이상 10,000이하의 수로 주어진다.
- 입력으로 주어지는 K는 항상 M보다 작거나 같다.

출력 조건
- 첫째 줄에 동빈이의 큰 수의 법칙에 따라 더해진 답을 출력한다.
"""

### 1. 단순하게 푸는 답안 ###

# N, M, K를 공백으로 구분하여 입력받기
# map(변환 함수, 순회 데이터) : 여러 순회 가능한 데이터를 한 번에 다른 형태로 변환하기 위해 사용
n, m, k = map(int, input().split()) # 입력받은 값을 공백으로 구분한 후 정수형으로 변환


# N개의 수를 공백으로 구분하여 입력받기
data = list(map(int, input().split()))

data.sort() # 입력받은 수 정렬(오름차수)
first = data[n-1] # 제일 큰 수
secound = data[n-2] # 두 번째 큰 수

result = 0

while True:
    for i in range(k): # 가장 큰 수부터 k번 더하기
        # m이 0이 될 경우 for 반복문 탈출
        if m == 0:
            break
        result += first
        m -= 1 # 더할 때마다 감소
    if m == 0:
        break # m이 0이 될 경우 while 반복문 탈출
    result += secound
    m -= 1

print(result) # 답안 출력