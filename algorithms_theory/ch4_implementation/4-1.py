"""
상 하 좌 우
- 여행가 A는 N * N 크기의 정사각형 공간위에 서 있다. 이 공간은 1 * 1 크기의 정사각형으로 나누어져 있다.
- 가장 왼쪽 위 좌표는 (1, 1)이며, 가장 오른쪽 아래 좌표는 (N, N)이다.
- A는 상(U), 하(D), 좌(L), 우(R) 방향으로 이동할 수 있으며 시작 좌표는 항상 (1, 1)이다.
- 여행가 A가 N * N 크기의 정사각형 공간을 벗어나는 움직임은 무시된다.
- 여행 계획서가 주어졌을 때 여행가 A가 최종적으로 도착할 지점의 좌표를 출력하는 프로그램을 작성하시오.

입력 조건
- 첫째 줄에 공간의 크기를 나타내는 N이 주어진다. (1 <= N <= 100)
- 둘째 줄에 여행가 A가 이동할 계획서 내용이 주어진다. (1 <= 이동 횟수 <= 100)

출력 조건
- 첫째 줄에 여행가 A가 최종적으로 도착할 지점의 좌표 (X, Y)를 공백으로 구분하여 출력한다.
"""
# 2020/10/05

# N을 입력
n = int(input())
x, y = 1, 1 # 시작 지점
plans = input().split() # 계획서를 입력받아 공백으로 구분 후 리스트로 저장

# L, R, U, D에 따른 이동 방향
dx = [0, 0, -1, 1] # 실제 2차원 좌표계가 아닌 행렬을 기준으로 하기 때문에 열에 해당하는 2번, 3번 인덱스가 변위
dy = [-1, 1, 0, 0] # 마찬가지로 행에 해당하는 0번, 1번 인덱스가 변위
move_type = ['L', 'R', 'U', 'D']

# 이동 계획을 하나 씩 확인
for plan in plans:
    # 이동 후 좌표 구하기
    for i in range(len(move_type)): # 0 ~ 3
        if plan == move_type[i]:
            nx = x + dx[i]
            ny = y + dy[i]
    # 공간을 벗어나는 이동일 시 무시
    if nx < 1 or ny < 1 or nx > n or nx > n:
        continue

    # 이동 수행
    x, y = nx, ny

print(x, y)